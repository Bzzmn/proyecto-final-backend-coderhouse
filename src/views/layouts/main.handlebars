<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/styles.css">
    <title>{{title}}</title>
</head>

<body class="flex flex-col h-[100dvh]">

        <!-- Toast notification container -->


    <nav class="bg-yellow-300 border-gray-200 dark:bg-gray-900 dark:border-gray-700 h-auto">
        <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
            <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
                <img src="/images/libremercadologo.png" class="h-[70px]" alt="Libremercado Logo" />
            </a>
            <button data-collapse-toggle="navbar-dropdown" type="button"
                class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-yellow-300 focus:outline-none  dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                aria-controls="navbar-dropdown" aria-expanded="false">
                <span class="sr-only">Open main menu</span>
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M1 1h15M1 7h15M1 13h15" />
                </svg>
            </button>
            <div class="hidden w-full md:block md:w-auto" id="navbar-dropdown">
                <ul
                    class="flex flex-col text-sm p-4 md:p-0 mt-4 rounded-lg bg-yellow-300 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-yellow-300 dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                    <li>
                        <a href="/"
                            class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 md:dark:text-blue-500 dark:bg-blue-600 md:dark:bg-transparent"
                            aria-current="page">Inicio</a>
                    </li>
                    <li>
                        <button id="dropdownNavbarLink" data-dropdown-toggle="dropdownNavbar"
                            class="flex items-center justify-between w-full py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 md:w-auto dark:text-white md:dark:hover:text-blue-500 dark:focus:text-white dark:border-gray-700 dark:hover:bg-gray-700 md:dark:hover:bg-transparent">Productos
                            <svg class="w-2.5 h-2.5 ms-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                fill="none" viewBox="0 0 10 6">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                    stroke-width="1" d="m1 1 4 4 4-4" />
                            </svg>
                        </button>
                        <!-- Dropdown menu -->
                        <div id="dropdownNavbar"
                            class="z-10 hidden font-normal bg-yellow-300 divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600">
                            <ul class="py-2 text-sm text-gray-700 dark:text-gray-400"
                                aria-labelledby="dropdownLargeButton">
                                <li>
                                    <a href="#"
                                        class="block px-4 py-2 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:hover:text-white">Laptops</a>
                                </li>
                                <li>
                                    <a href="#"
                                        class="block px-4 py-2 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:hover:text-white">Smartphones</a>
                                </li>
                                <li>
                                    <a href="#"
                                        class="block px-4 py-2 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:hover:text-white">Headphones</a>
                                </li>
                            </ul>
                            <div class="py-1">
                                <a href="#"
                                    class="block px-4 py-2 text-sm text-gray-700 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Sign
                                    out</a>
                            </div>
                        </div>
                    </li>
                    <li>
                        <a href="#"
                            class="block py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Ofertas</a>
                    </li>
                    <li class="flex items-center gap-2">
                        {{#if user}}
                        <span class="text-gray-900">Hola, {{user.first_name}}</span>
                        <a href="#" id="logout-button"
                            class="block py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Cerrar
                            Sesión</a>
                        {{else}}
                        <a href="/login"
                            class="block py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Iniciar
                            Sesión</a>
                        {{/if}}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor"
                            class="w-5 h-5  text-gray-900 hover:text-blue-700">
                            <path
                                d="M320 128a96 96 0 1 0 -192 0 96 96 0 1 0 192 0zM96 128a128 128 0 1 1 256 0A128 128 0 1 1 96 128zM32 480l384 0c-1.2-79.7-66.2-144-146.3-144l-91.4 0c-80 0-145 64.3-146.3 144zM0 482.3C0 383.8 79.8 304 178.3 304l91.4 0C368.2 304 448 383.8 448 482.3c0 16.4-13.3 29.7-29.7 29.7L29.7 512C13.3 512 0 498.7 0 482.3z" />
                        </svg>
                    </li>
                    {{#if user}}
                    <button class="relative">
                        <a href="/cart" class="nav-cart-button h-15 w-15 sm:h-10 sm:w-10">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" fill="currentColor"
                                class="w-5 h-5 text-gray-900 hover:text-blue-700">
                                <path
                                    d="M16 0C7.2 0 0 7.2 0 16s7.2 16 16 16l37.9 0c7.6 0 14.2 5.3 15.7 12.8l58.9 288c6.1 29.8 32.3 51.2 62.7 51.2L496 384c8.8 0 16-7.2 16-16s-7.2-16-16-16l-304.8 0c-15.2 0-28.3-10.7-31.4-25.6L152 288l314.6 0c29.4 0 55-20 62.1-48.5L570.6 71.8c5-20.2-10.2-39.8-31-39.8L99.1 32C92.5 13 74.4 0 53.9 0L16 0zm90.1 64l433.4 0L497.6 231.8C494 246 481.2 256 466.5 256l-321.1 0L106.1 64zM168 456a24 24 0 1 1 48 0 24 24 0 1 1 -48 0zm80 0a56 56 0 1 0 -112 0 56 56 0 1 0 112 0zm200-24a24 24 0 1 1 0 48 24 24 0 1 1 0-48zm0 80a56 56 0 1 0 0-112 56 56 0 1 0 0 112z" />
                            </svg>
                        </a>
                        <span id="cart-badge"
                            class="absolute -top-2 -right-2 bg-blue-700 text-white text-xs font-semibold rounded-full h-4 w-4 flex items-center justify-center">0</span>
                    </button>
                    {{/if}}
                </ul>
            </div>
        </div>
    </nav>

    <main class="grow">
        {{#if messages.error}}
        <div class="alert alert-danger">{{messages.error}}</div>
        {{/if}}
        {{#if messages.success}}
        <div class="alert alert-success">{{messages.success}}</div>
        {{/if}}
        {{{body}}}
    </main>
    <footer class="bg-yellow-300 shadow dark:bg-gray-900 m-0 h-auto">
        <div class="w-full max-w-screen-xl mx-auto p-4 md:py-8">
            <div class="flex items-center w-full justify-center">

                <ul
                    class="flex flex-wrap items-center mb-6 text-sm font-small text-gray-500 sm:mb-0 dark:text-gray-400">
                    <li>
                        <a href="#" class="hover:underline me-4 md:me-6">About</a>
                    </li>
                    <li>
                        <a href="#" class="hover:underline me-4 md:me-6">Privacy Policy</a>
                    </li>
                    <li>
                        <a href="#" class="hover:underline me-4 md:me-6">Licensing</a>
                    </li>
                    <li>
                        <a href="#" class="hover:underline">Contact</a>
                    </li>
                </ul>
            </div>
            <hr class="my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8" />
            <span class="block text-xs text-gray-500 sm:text-center dark:text-gray-400">© 2024 <a href="#"
                    class="hover:underline">LibreMercado™</a>. Absolutely No Rights Reserved.</span>
        </div>
    </footer>

    <!-- Add this just before the shopping cart div -->


    <div id="shopping-cart"
        class="fixed inset-y-0 right-0 w-full sm:w-96 bg-white shadow-lg transform transition-transform duration-300 ease-in-out translate-x-full z-40">
        <div class="h-full flex flex-col">
            <div class="flex flex-row items-center justify-between space-y-0 p-4 border-b">
                <h2 class="text-lg font-medium">MI CARRITO DE COMPRAS</h2>
                <button id="close-cart" class="text-gray-500 hover:text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div class="flex-grow overflow-auto p-4">
                <!-- Los elementos del carrito se insertarán dinámicamente aquí -->
            </div>
            <div class="p-4 border-t">
                <a href="/checkout" class="w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700">Finalizar
                    Compra</a>
            </div>
        </div>
    </div>

    <div id="toast-container" class="fixed bottom-1 right-1 z-50 pointer-events-none">
        <!-- Los toasts se agregarán aquí dinámicamente -->
    </div>


    <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.1/dist/flowbite.min.js"></script>
    <script src="/js/home.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script>
        function updateCartBadge() {
            const cartBadge = document.getElementById('cart-badge');
            if (cartBadge) {
                const quantity = localStorage.getItem('cartQuantity') || '0';
                cartBadge.textContent = quantity;
                cartBadge.style.display = quantity === '0' ? 'none' : 'flex';
                console.log('Badge actualizado con cantidad:', quantity);
            }
        }

        // Hacer la función disponible globalmente
        window.updateCartBadge = updateCartBadge;

        // Actualizar el badge cuando se carga la página
        document.addEventListener('DOMContentLoaded', updateCartBadge);

        document.addEventListener('DOMContentLoaded', function() {
            // Update cart badge function
            function updateCartBadge() {
                const cartBadge = document.getElementById('cart-badge');
                if (cartBadge) {
                    const quantity = localStorage.getItem('cartQuantity') || '0';
                    cartBadge.textContent = quantity;
                    cartBadge.style.display = quantity === '0' ? 'none' : 'flex';
                }
            }

            // Función para cargar los productos en el sidebar
            async function loadCartProducts() {
                const cartContainer = document.querySelector('#shopping-cart .flex-grow');
                if (!cartContainer) return;

                const cart = JSON.parse(localStorage.getItem('cart') || '[]');
                console.log('Cargando productos del carrito:', cart);

                if (cart.length === 0) {
                    cartContainer.innerHTML = '<p class="text-center text-gray-500">Tu carrito está vacío</p>';
                    return;
                }

                try {
                    // Hacer una petición para obtener el HTML del partial para cada producto
                    const productsHtml = await Promise.all(cart.map(async (item) => {
                        const response = await fetch(`/api/cart/product-card?` + new URLSearchParams({
                            productId: item.productCode,
                            quantity: item.quantity,
                            price: item.productPrice,
                            title: item.productTitle,
                            thumbnails: item.productImage
                        }));
                        if (!response.ok) throw new Error('Error al cargar el producto');
                        return await response.text();
                    }));

                    cartContainer.innerHTML = productsHtml.join('');

                    // Agregar event listeners a los botones de eliminar
                    const removeButtons = cartContainer.querySelectorAll('.remove-btn');
                    removeButtons.forEach(button => {
                        button.addEventListener('click', function() {
                            const productId = this.getAttribute('data-id');
                            removeFromCart(productId);
                        });
                    });
                } catch (error) {
                    console.error('Error al cargar los productos:', error);
                    cartContainer.innerHTML = '<p class="text-center text-red-500">Error al cargar los productos</p>';
                }
            }

            // Función para eliminar producto del carrito
            function removeFromCart(productId) {
                const cart = JSON.parse(localStorage.getItem('cart') || '[]');
                const newCart = cart.filter(item => item.productCode !== productId);
                localStorage.setItem('cart', JSON.stringify(newCart));
                
                // Actualizar cantidad total
                const totalQuantity = newCart.reduce((sum, item) => sum + item.quantity, 0);
                localStorage.setItem('cartQuantity', totalQuantity.toString());
                
                updateCartBadge();
                loadCartProducts(); // Recargar productos
            }

            // Call updateCartBadge on page load
            updateCartBadge();

            // Cart button functionality
            const cartButton = document.querySelector('a[href="/cart"]');
            const shoppingCart = document.getElementById('shopping-cart');
            const closeCart = document.getElementById('close-cart');

            if (cartButton && shoppingCart && closeCart) {
                cartButton.addEventListener('click', (e) => {
                    e.preventDefault();
                    shoppingCart.classList.remove('translate-x-full');
                    loadCartProducts(); // Cargar productos cuando se abre el sidebar
                    
                    let cartOverlay = document.getElementById('cart-overlay');
                    if (!cartOverlay) {
                        cartOverlay = document.createElement('div');
                        cartOverlay.id = 'cart-overlay';
                        cartOverlay.className = 'fixed inset-0 bg-black bg-opacity-50 z-30 hidden transition-opacity duration-300 ease-in-out backdrop-blur-sm';
                        document.body.appendChild(cartOverlay);
                    }
                    cartOverlay.classList.remove('hidden');
                });

                closeCart.addEventListener('click', () => {
                    shoppingCart.classList.add('translate-x-full');
                    const cartOverlay = document.getElementById('cart-overlay');
                    if (cartOverlay) {
                        cartOverlay.classList.add('hidden');
                    }
                });

                document.addEventListener('click', (e) => {
                    if (e.target.id === 'cart-overlay') {
                        shoppingCart.classList.add('translate-x-full');
                        e.target.classList.add('hidden');
                    }
                });
            }
        });

        // Función para mostrar el toast
        function showToast(message, type = 'success') {
            const toastContainer = document.getElementById('toast-container');
            
            const toast = document.createElement('div');
            toast.className = `pointer-events-auto flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow-lg dark:text-gray-400 dark:bg-gray-800 transition-all duration-300 transform translate-y-full opacity-0`;
            
            const types = {
                success: {
                    icon: `<svg class="w-5 h-5 text-green-500 dark:text-green-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"/>
                    </svg>`,
                    bgColor: 'bg-white'
                },
                error: {
                    icon: `<svg class="w-5 h-5 text-red-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z"/>
                    </svg>`,
                    bgColor: 'bg-white'
                }
            };

            toast.innerHTML = `
                <div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8">
                    ${types[type].icon}
                </div>
                <div class="ms-3 text-sm font-normal">${message}</div>
                <button type="button" class="ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700" onclick="this.parentElement.remove()">
                    <span class="sr-only">Close</span>
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                </button>
            `;

            // Limpiar toasts antiguos si hay más de 3
            while (toastContainer.children.length >= 3) {
                toastContainer.removeChild(toastContainer.firstChild);
            }

            toastContainer.appendChild(toast);

            // Animación de entrada
            requestAnimationFrame(() => {
                requestAnimationFrame(() => {
                    toast.classList.remove('translate-y-full', 'opacity-0');
                    toast.classList.add('translate-y-0', 'opacity-100');
                });
            });

            // Auto-eliminar después de 3 segundos
            const timeoutId = setTimeout(() => {
                if (toast.parentElement) {
                    toast.classList.add('translate-y-full', 'opacity-0');
                    setTimeout(() => {
                        if (toast.parentElement) {
                            toast.remove();
                        }
                    }, 300);
                }
            }, 3000);

            // Pausar el timeout al pasar el mouse
            toast.addEventListener('mouseenter', () => {
                clearTimeout(timeoutId);
            });

            // Reanudar el timeout al quitar el mouse
            toast.addEventListener('mouseleave', () => {
                setTimeout(() => {
                    if (toast.parentElement) {
                        toast.classList.add('translate-y-full', 'opacity-0');
                        setTimeout(() => {
                            if (toast.parentElement) {
                                toast.remove();
                            }
                        }, 300);
                    }
                }, 1000);
            });
        }

        // Hacer la función disponible globalmente
        window.showToast = showToast;
    </script>




</body>

</html>