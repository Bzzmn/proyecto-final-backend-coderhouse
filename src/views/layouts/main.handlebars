<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/styles.css">
    <title>{{title}}</title>
</head>

<body class="flex flex-col h-[100dvh]">

    <nav class="bg-yellow-300 border-gray-200 dark:bg-gray-900 dark:border-gray-700 h-auto">
        <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
            <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse">
                <img src="/images/libremercadologo.png" class="h-[70px]" alt="Libremercado Logo" />
            </a>
            <button data-collapse-toggle="navbar-dropdown" type="button"
                class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-yellow-300 focus:outline-none  dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                aria-controls="navbar-dropdown" aria-expanded="false">
                <span class="sr-only">Open main menu</span>
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M1 1h15M1 7h15M1 13h15" />
                </svg>
            </button>
            <div class="hidden w-full md:block md:w-auto" id="navbar-dropdown">
                <ul
                    class="flex flex-col text-sm p-4 md:p-0 mt-4 rounded-lg bg-yellow-300 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-yellow-300 dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
                    <li>
                        <a href="/"
                            class="block py-2 px-3 text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 md:dark:text-blue-500 dark:bg-blue-600 md:dark:bg-transparent"
                            aria-current="page">Inicio</a>
                    </li>
                    <li>
                        <button id="dropdownNavbarLink" data-dropdown-toggle="dropdownNavbar"
                            class="flex items-center justify-between w-full py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 md:w-auto dark:text-white md:dark:hover:text-blue-500 dark:focus:text-white dark:border-gray-700 dark:hover:bg-gray-700 md:dark:hover:bg-transparent">Productos
                            <svg class="w-2.5 h-2.5 ms-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                                fill="none" viewBox="0 0 10 6">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                    stroke-width="1" d="m1 1 4 4 4-4" />
                            </svg>
                        </button>
                        <!-- Dropdown menu -->
                        <div id="dropdownNavbar"
                            class="z-10 hidden font-normal bg-yellow-300 divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600">
                            <ul class="py-2 text-sm text-gray-700 dark:text-gray-400"
                                aria-labelledby="dropdownLargeButton">
                                <li>
                                    <a href="#"
                                        class="block px-4 py-2 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:hover:text-white">Laptops</a>
                                </li>
                                <li>
                                    <a href="#"
                                        class="block px-4 py-2 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:hover:text-white">Smartphones</a>
                                </li>
                                <li>
                                    <a href="#"
                                        class="block px-4 py-2 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:hover:text-white">Headphones</a>
                                </li>
                            </ul>
                            <div class="py-1">
                                <a href="#"
                                    class="block px-4 py-2 text-sm text-gray-700 hover:bg-yellow-200 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">Sign
                                    out</a>
                            </div>
                        </div>
                    </li>
                    <li>
                        <a href="#"
                            class="block py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Ofertas</a>
                    </li>
                    <li class="flex items-center gap-2">
                        {{#if user}}
                        <span class="text-gray-900">Hola, {{user.first_name}}</span>
                        <a href="#" id="logout-button"
                            class="block py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Cerrar
                            Sesión</a>
                        {{else}}
                        <a href="/login"
                            class="block py-2 px-3 text-gray-900 rounded hover:bg-yellow-200 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Iniciar
                            Sesión</a>
                        {{/if}}
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor"
                            class="w-5 h-5  text-gray-900 hover:text-blue-700">
                            <path
                                d="M320 128a96 96 0 1 0 -192 0 96 96 0 1 0 192 0zM96 128a128 128 0 1 1 256 0A128 128 0 1 1 96 128zM32 480l384 0c-1.2-79.7-66.2-144-146.3-144l-91.4 0c-80 0-145 64.3-146.3 144zM0 482.3C0 383.8 79.8 304 178.3 304l91.4 0C368.2 304 448 383.8 448 482.3c0 16.4-13.3 29.7-29.7 29.7L29.7 512C13.3 512 0 498.7 0 482.3z" />
                        </svg>
                    </li>
                    {{#if user}}
                    <button class="relative">
                        <a href="/cart" class="nav-cart-button">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" fill="currentColor"
                                class="w-5 h-5 text-gray-900 hover:text-blue-700">
                                <path
                                    d="M16 0C7.2 0 0 7.2 0 16s7.2 16 16 16l37.9 0c7.6 0 14.2 5.3 15.7 12.8l58.9 288c6.1 29.8 32.3 51.2 62.7 51.2L496 384c8.8 0 16-7.2 16-16s-7.2-16-16-16l-304.8 0c-15.2 0-28.3-10.7-31.4-25.6L152 288l314.6 0c29.4 0 55-20 62.1-48.5L570.6 71.8c5-20.2-10.2-39.8-31-39.8L99.1 32C92.5 13 74.4 0 53.9 0L16 0zm90.1 64l433.4 0L497.6 231.8C494 246 481.2 256 466.5 256l-321.1 0L106.1 64zM168 456a24 24 0 1 1 48 0 24 24 0 1 1 -48 0zm80 0a56 56 0 1 0 -112 0 56 56 0 1 0 112 0zm200-24a24 24 0 1 1 0 48 24 24 0 1 1 0-48zm0 80a56 56 0 1 0 0-112 56 56 0 1 0 0 112z" />
                            </svg>
                        </a>
                        <span id="cart-badge"
                            class="absolute -top-2 -right-2 bg-blue-700 text-white text-xs font-semibold rounded-full h-4 w-4 flex items-center justify-center">0</span>
                    </button>
                    {{/if}}
                </ul>
            </div>
        </div>
    </nav>

    <main class="grow">
        {{#if messages.error}}
        <div class="alert alert-danger">{{messages.error}}</div>
        {{/if}}
        {{#if messages.success}}
        <div class="alert alert-success">{{messages.success}}</div>
        {{/if}}
        {{{body}}}
    </main>
    <footer class="bg-yellow-300 shadow dark:bg-gray-900 m-0 h-auto">
        <div class="w-full max-w-screen-xl mx-auto p-4 md:py-8">
            <div class="flex items-center w-full justify-center">

                <ul
                    class="flex flex-wrap items-center mb-6 text-sm font-small text-gray-500 sm:mb-0 dark:text-gray-400">
                    <li>
                        <a href="#" class="hover:underline me-4 md:me-6">About</a>
                    </li>
                    <li>
                        <a href="#" class="hover:underline me-4 md:me-6">Privacy Policy</a>
                    </li>
                    <li>
                        <a href="#" class="hover:underline me-4 md:me-6">Licensing</a>
                    </li>
                    <li>
                        <a href="#" class="hover:underline">Contact</a>
                    </li>
                </ul>
            </div>
            <hr class="my-6 border-gray-200 sm:mx-auto dark:border-gray-700 lg:my-8" />
            <span class="block text-xs text-gray-500 sm:text-center dark:text-gray-400">© 2024 <a href="#"
                    class="hover:underline">LibreMercado™</a>. Absolutely No Rights Reserved.</span>
        </div>
    </footer>

    <!-- Add this just before the shopping cart div -->


    <div id="shopping-cart"
        class="fixed inset-y-0 right-0 w-full sm:w-96 bg-white shadow-lg transform transition-transform duration-300 ease-in-out translate-x-full z-40">
        <div class="h-full flex flex-col">
            <div class="flex flex-row items-center justify-between space-y-0 p-4 border-b">
                <h2 class="text-lg font-medium">MI CARRITO DE COMPRAS</h2>
                <button id="close-cart" class="text-gray-500 hover:text-gray-700">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <div class="flex-grow overflow-auto p-4">
                <!-- Los elementos del carrito se insertarán dinámicamente aquí -->
            </div>
            <div class="p-4 border-t">
                <a href="/checkout" class="w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700">Finalizar
                    Compra</a>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.1/dist/flowbite.min.js"></script>
    <script src="/js/home.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script>
        // Function to update cart badge
        function updateCartBadge() {
            const cartQuantity = localStorage.getItem('cartQuantity') || 0;
            const cartBadge = document.getElementById('cart-badge');
            if (cartBadge) {
                cartBadge.textContent = cartQuantity;
                cartBadge.style.display = cartQuantity > 0 ? 'flex' : 'none';
            }
        }

        // Call updateCartBadge on page load
        document.addEventListener('DOMContentLoaded', updateCartBadge);

        // Listen for custom event to update cart quantity
        window.addEventListener('updateCartQuantity', function (e) {
            localStorage.setItem('cartQuantity', e.detail.quantity);
            updateCartBadge();
        });

        // Expose updateCartBadge function globally
        window.updateCartBadge = updateCartBadge;
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cartButton = document.querySelector('.nav-cart-button');
            const shoppingCart = document.getElementById('shopping-cart');
            const closeCart = document.getElementById('close-cart');
            const cartOverlay = document.createElement('div');
            cartOverlay.id = 'cart-overlay';
            cartOverlay.className = 'fixed inset-0 bg-black bg-opacity-50 z-30 hidden transition-opacity duration-300 ease-in-out backdrop-blur-sm';
            document.body.appendChild(cartOverlay);

            async function fetchCartData() {
                const response = await fetch('api/carts');
                console.log('fetching cart data')
                if (!response.ok) {
                    throw new Error('Failed to fetch cart data');
                }
                console.log(response)
                return response.json();

            }

            function renderCartItems(cartData) {
                const cartContent = document.querySelector('#shopping-cart .flex-grow');
                cartContent.innerHTML = '';

                let total = 0;

                cartData.products.forEach(item => {
                    total += item.product.price * item.quantity;
                    const productElement = document.createElement('div');
                    productElement.id = `cart-item-${item.product._id}`;
                    productElement.className = 'rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700 dark:bg-gray-800 md:p-6 mb-4';
                    productElement.innerHTML = `
                    <div class="space-y-4 flex items-center w-full">
                        
                        <a href="#" class="shrink-0 md:order-0">
                            <div class="w-16 h-16 bg-white rounded-full flex items-center justify-center overflow-hidden me-2">
                                <img class="h-12 w-12 object-cover object-center" src="${item.product.thumbnails}" alt="imagen del producto" />
                            </div>
                        </a>

                        <div class="flex flex-col w-full">
                            <a href="#" class="text-base font-medium text-gray-900 hover:underline dark:text-white">${item.product.title}</a>
                            <div class="flex items-center justify-between">
                                <label for="counter-input-${item.product._id}" class="sr-only">Elegir cantidad:</label>
                                <div class="flex items-center">
                                    <button type="button" class="decrease-quantity inline-flex h-5 w-5 shrink-0 items-center justify-center rounded-md border border-gray-300 bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700">
                                        <svg class="h-2.5 w-2.5 text-gray-900 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h16" />
                                        </svg>
                                    </button>
                                    <input type="text" id="counter-input-${item.product._id}"
                                        class="w-10 shrink-0 border-0 bg-transparent text-center text-sm font-medium text-gray-900 focus:outline-none focus:ring-0 dark:text-white"
                                        value="${item.quantity}" readonly />
                                    <button type="button" class="increase-quantity inline-flex h-5 w-5 shrink-0 items-center justify-center rounded-md border border-gray-300 bg-gray-100 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-100 dark:border-gray-600 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700">
                                        <svg class="h-2.5 w-2.5 text-gray-900 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16" />
                                        </svg>
                                    </button>
                                </div>
                                <div class="text-end">
                                    <p class="text-xl font-bold text-gray-900 dark:text-white">$${(item.product.price * item.quantity).toFixed(2)}</p>
                                </div>
                            </div>
                            
                            <div class="min-w-0 flex justify-end space-y-4 mt-2">
                            
                                <div class="flex items-center gap-4 ">
                                    <button data-product-id="${item.product._id}" 
                                        class="remove-item remove-btn inline-flex items-center text-xs font-medium text-red-600 dark:text-red-500">
                                        <svg class="me-1.5 h-4 w-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
                                        </svg>
                                        Eliminar
                                    </button>
                                </div>

                            </div>
                        
                        </div>
                    </div>
                    `;
                    cartContent.appendChild(productElement);
                });

                updateCartTotal(total);

                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', async (e) => {
                        e.preventDefault();
                        const productId = e.currentTarget.dataset.productId;
                        try {
                            await removeItemFromCart(productId);
                            const itemElement = document.getElementById(`cart-item-${productId}`);
                            if (itemElement) {
                                itemElement.remove();
                                total -= parseFloat(itemElement.querySelector('.text-xl').textContent.replace('$', ''));
                                updateCartTotal(total);
                            }
                            updateCartBadge();
                        } catch (error) {
                            console.error('Error removing item from cart:', error);
                        }
                    });
                });

                document.querySelectorAll('.decrease-quantity, .increase-quantity').forEach(button => {
                    button.addEventListener('click', async (e) => {
                        const input = e.target.closest('.flex').querySelector('input');
                        const productId = input.id.replace('counter-input-', '');
                        let newQuantity = parseInt(input.value);

                        if (e.target.classList.contains('decrease-quantity')) {
                            newQuantity = Math.max(1, newQuantity - 1);
                        } else {
                            newQuantity += 1;
                        }

                        await updateCartItemQuantity(productId, newQuantity);
                        await updateCart();
                    });
                });
            }

            async function removeItemFromCart(productId) {
                const response = await fetch(`/api/carts/product/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });
                if (!response.ok) {
                    throw new Error('Error al eliminar el artículo del carrito');
                }
                return response.json();
            }

            async function updateCart() {
                const cartData = await fetchCartData();
                renderCartItems(cartData);
                updateCartBadge();
            }

            async function updateCartItemQuantity(productId, newQuantity) {
                const response = await fetch(`/api/cart/update/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity: newQuantity }),
                });

                if (!response.ok) {
                    throw new Error('Error al actualizar la cantidad del artículo en el carrito');
                }
            }

            function toggleCart() {
                shoppingCart.classList.toggle('translate-x-full');
                cartOverlay.classList.toggle('hidden');
                if (!cartOverlay.classList.contains('hidden')) {
                    updateCart();
                }
            }

            cartButton.addEventListener('click', function (e) {
                e.preventDefault();
                toggleCart();
            });

            closeCart.addEventListener('click', toggleCart);
            cartOverlay.addEventListener('click', toggleCart);

            function updateCartTotal(total) {
                const totalElement = document.getElementById('cart-total');
                if (totalElement) {
                    totalElement.textContent = `Total: $${total.toFixed(2)}`;
                } else {
                    const newTotalElement = document.createElement('div');
                    newTotalElement.id = 'cart-total';
                    newTotalElement.className = 'mt-4 text-right font-bold text-xl';
                    newTotalElement.textContent = `Total: $${total.toFixed(2)}`;
                    document.querySelector('#shopping-cart .flex-grow').appendChild(newTotalElement);
                }
            }
        });
    </script>
</body>

</html>